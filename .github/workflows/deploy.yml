name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main # Trigger on pull requests to the main branch

jobs:
  # Job 1: Test and Lint
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install dependencies and lint the client
      - name: Install Client Dependencies
        working-directory: ./client
        run: npm install

      - name: Lint Client Code
        working-directory: ./client
        run: npm run lint

      # Install dependencies and lint the server
      - name: Install Server Dependencies
        working-directory: ./server
        run: npm install

      - name: Lint Server Code
        working-directory: ./server
        run: npm run lint

  # Job 2: Build Frontend
  build-frontend:
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install dependencies and build the client
      - name: Install Client Dependencies
        working-directory: ./client
        run: npm install

      - name: Build Client
        working-directory: ./client
        run: npm run build

  # Job 3: Deploy Backend to Render
  deploy-backend:
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install dependencies and deploy to Render
      - name: Install Server Dependencies
        working-directory: ./server
        run: npm install

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST https://api.render.com/deploy \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{"serviceId": "your-render-service-id"}'

  # Job 4: Deploy Frontend to Vercel
  deploy-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Deploy to Vercel
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v30
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}